{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\src\\\\chatUI\\\\inputBox\\\\input.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport style from './input.module.css';\nimport send from './assets/send.png';\nimport mic from './assets/mic.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputBox(_ref) {\n  _s();\n  let {\n    sendMessage\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  // const [messages, setMessages] = useState([]);\n  const [listening, setListening] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const audioRef = useRef();\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  // const handleSend = () => {\n  //   if (inputValue || audioRef.current) {\n  //     const userMessage = {\n  //       type: 'sent',\n  //       text: inputValue,\n  //       audio: audioRef.current,\n  //     };\n  //     const botResponse = {\n  //       type: 'received',\n  //       text: 'This is a bot response',\n  //     };\n  //     setMessages([...messages, userMessage, botResponse]);\n  //     setInputValue('');\n  //     audioRef.current = null;\n  //   }\n  // };\n\n  const handleMicDown = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const mediaRecorder = new MediaRecorder(stream);\n      setMediaRecorder(mediaRecorder);\n      mediaRecorder.start();\n      setRecording(true);\n    }).catch(err => {\n      console.log('Unable to access microphone: ', err);\n    });\n  };\n  const handleMicUp = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const handleAudioData = event => {\n    const chunks = [];\n    chunks.push(event.data);\n    const audioBlob = new Blob(chunks, {\n      type: 'audio/mp3'\n    });\n    audioRef.current = audioBlob;\n  };\n  if (mediaRecorder) {\n    mediaRecorder.ondataavailable = handleAudioData;\n    mediaRecorder.onstop = handleMicUp;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.inputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.userMessages,\n        children: messages.filter(message => message.type === 'sent').map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.message} ${style.sent}`,\n          children: [message.text, message.audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: URL.createObjectURL(message.audio),\n              type: \"audio/wav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.botMessages,\n        children: messages.filter(message => message.type === 'received').map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.message} ${style.received}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-grin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mic,\n      alt: \"Microphone\",\n      onMouseDown: handleMicDown,\n      onMouseUp: handleMicUp,\n      onTouchStart: handleMicDown,\n      onTouchEnd: handleMicUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: send,\n      alt: \"Send\",\n      onClick: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(InputBox, \"w5TErLCF/X1qWGjw2LX3SQZkgSk=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","useRef","style","send","mic","jsxDEV","_jsxDEV","InputBox","_ref","_s","sendMessage","inputValue","setInputValue","listening","setListening","recording","setRecording","mediaRecorder","setMediaRecorder","audioRef","handleInputChange","event","target","value","handleKeyPress","key","handleSend","handleMicDown","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","start","catch","err","console","log","handleMicUp","stop","handleAudioData","chunks","push","data","audioBlob","Blob","type","current","ondataavailable","onstop","className","inputBox","children","messages","userMessages","filter","message","map","index","sent","text","controls","src","URL","createObjectURL","fileName","_jsxFileName","lineNumber","columnNumber","botMessages","received","input","placeholder","onChange","onKeyPress","alt","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onClick","_c","$RefreshReg$"],"sources":["D:/bot/src/chatUI/inputBox/input.js"],"sourcesContent":["import React, { useState , useRef} from 'react';\r\nimport style from './input.module.css'\r\nimport send from './assets/send.png';\r\nimport mic from './assets/mic.png'\r\nfunction InputBox({ sendMessage }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  // const [messages, setMessages] = useState([]);\r\n  const [listening, setListening] = useState(false);\r\n  const [recording, setRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n  const audioRef = useRef();\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // const handleSend = () => {\r\n  //   if (inputValue || audioRef.current) {\r\n  //     const userMessage = {\r\n  //       type: 'sent',\r\n  //       text: inputValue,\r\n  //       audio: audioRef.current,\r\n  //     };\r\n  //     const botResponse = {\r\n  //       type: 'received',\r\n  //       text: 'This is a bot response',\r\n  //     };\r\n  //     setMessages([...messages, userMessage, botResponse]);\r\n  //     setInputValue('');\r\n  //     audioRef.current = null;\r\n  //   }\r\n  // };\r\n\r\n  const handleMicDown = () => {\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        setMediaRecorder(mediaRecorder);\r\n        mediaRecorder.start();\r\n        setRecording(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log('Unable to access microphone: ', err);\r\n      });\r\n  };\r\n  \r\n  const handleMicUp = () => {\r\n    mediaRecorder.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const handleAudioData = (event) => {\r\n    const chunks = [];\r\n    chunks.push(event.data);\r\n    const audioBlob = new Blob(chunks, { type: 'audio/mp3' });\r\n    audioRef.current = audioBlob;\r\n  };\r\n  \r\n  if (mediaRecorder) {\r\n    mediaRecorder.ondataavailable = handleAudioData;\r\n    mediaRecorder.onstop = handleMicUp;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className={style.inputBox}>\r\n    <div className={style.messages}>\r\n\r\n                   <div className={style.userMessages}>\r\n          {messages\r\n            .filter((message) => message.type === 'sent')\r\n            .map((message, index) => (\r\n              <div key={index} className={`${style.message} ${style.sent}`}>\r\n                {message.text}\r\n                {message.audio && (\r\n                  <audio controls>\r\n                    <source src={URL.createObjectURL(message.audio)} type=\"audio/wav\" />\r\n                  </audio>\r\n                )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className={style.botMessages}>\r\n          {messages\r\n            .filter((message) => message.type === 'received')\r\n            .map((message, index) => (\r\n              <div key={index} className={`${style.message} ${style.received}`}>\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className={style.input}></div>\r\n      <i className=\"fas fa-grin\"></i>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <img src={mic} alt=\"Microphone\"\r\n\r\n        onMouseDown={handleMicDown}\r\n        onMouseUp={handleMicUp}\r\n        onTouchStart={handleMicDown}\r\n        onTouchEnd={handleMicUp}\r\n\r\n      />\r\n      <img src={send} alt=\"Send\" onClick={handleSend} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}