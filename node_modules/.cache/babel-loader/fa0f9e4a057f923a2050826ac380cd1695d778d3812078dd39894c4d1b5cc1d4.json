{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import Navbar from \"./Navbar/navbar\";\n// import Container from \"./Body/Container/Container\";\n// function App() {\n//   return (\n//     <div>\n//       <Navbar/>\n//       <Container/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const handleMessageChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleSendMessage = () => {\n    const newChatHistory = [...chatHistory];\n    newChatHistory.push({\n      message,\n      isUser: true\n    });\n    setChatHistory(newChatHistory);\n    setMessage(\"\");\n\n    // Code to send message to chatbot API or platform goes here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: chat.isUser ? \"user-message\" : \"bot-message\",\n          children: chat.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: handleMessageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EXvBHp4uB8b2hbMlTy8OWb1libE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","chatHistory","setChatHistory","handleMessageChange","e","target","value","handleSendMessage","newChatHistory","push","isUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","index","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/bot/src/App.js"],"sourcesContent":["// import Navbar from \"./Navbar/navbar\";\n// import Container from \"./Body/Container/Container\";\n// function App() {\n//   return (\n//     <div>\n//       <Navbar/>\n//       <Container/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    const newChatHistory = [...chatHistory];\n    newChatHistory.push({ message, isUser: true });\n    setChatHistory(newChatHistory);\n    setMessage(\"\");\n\n    // Code to send message to chatbot API or platform goes here\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>My Chatbot</h1>\n      </header>\n      <main>\n        <div className=\"chat-history\">\n          {chatHistory.map((chat, index) => (\n            <div key={index} className={chat.isUser ? \"user-message\" : \"bot-message\"}>\n              {chat.message}\n            </div>\n          ))}\n        </div>\n        <div className=\"message-input\">\n          <input type=\"text\" value={message} onChange={handleMessageChange} />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,mBAAmB,GAAIC,CAAC,IAAK;IACjCJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,cAAc,GAAG,CAAC,GAAGP,WAAW,CAAC;IACvCO,cAAc,CAACC,IAAI,CAAC;MAAEV,OAAO;MAAEW,MAAM,EAAE;IAAK,CAAC,CAAC;IAC9CR,cAAc,CAACM,cAAc,CAAC;IAC9BR,UAAU,CAAC,EAAE,CAAC;;IAEd;EACF,CAAC;;EAED,oBACEJ,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAQe,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BhB,OAAA;QAAAgB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ,eACTpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAKe,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BX,WAAW,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BvB,OAAA;UAAiBe,SAAS,EAAEO,IAAI,CAACR,MAAM,GAAG,cAAc,GAAG,aAAc;UAAAE,QAAA,EACtEM,IAAI,CAACnB;QAAO,GADLoB,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGhB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNpB,OAAA;QAAKe,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhB,OAAA;UAAOwB,IAAI,EAAC,MAAM;UAACd,KAAK,EAAEP,OAAQ;UAACsB,QAAQ,EAAElB;QAAoB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACpEpB,OAAA;UAAQ0B,OAAO,EAAEf,iBAAkB;UAAAK,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAClB,EAAA,CArCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}