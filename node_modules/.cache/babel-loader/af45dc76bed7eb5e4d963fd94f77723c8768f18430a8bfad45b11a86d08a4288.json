{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\src\\\\chatUI\\\\inputBox\\\\input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport style from './input.module.css';\nimport send from './assets/send.png';\nimport mic from './assets/mic.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputBox(_ref) {\n  _s();\n  let {\n    sendMessage\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // const handleKeyPress = (event) => {\n  //   if (event.key === 'Enter') {\n  //     sendMessage(inputValue);\n  //     setInputValue('');\n  //   }\n  // }\n\n  const handleSend = () => {\n    if (inputValue) {\n      const newMessage = {\n        type: 'sent',\n        text: inputValue\n      };\n      setMessages([...messages, newMessage]);\n      setInputValue('');\n      setTimeout(() => {\n        const botResponse = {\n          type: 'received',\n          text: 'This is a bot response'\n        };\n        setMessages([...messages, botResponse]);\n      }, 1000); // simulate bot response delay\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.inputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.message + ' ' + style[message.type],\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-grin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: inputValue,\n      onChange: handleInputChange\n      // onKeyPress={handleKeyPress}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mic,\n      alt: \"Microphone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: send,\n      alt: \"Send\",\n      onClick: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(InputBox, \"eWo+kl8Gtoyyghyz4XClkXtXx2I=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","style","send","mic","jsxDEV","_jsxDEV","InputBox","_ref","_s","sendMessage","inputValue","setInputValue","messages","setMessages","handleInputChange","event","target","value","handleSend","newMessage","type","text","setTimeout","botResponse","className","inputBox","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","onChange","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/bot/src/chatUI/inputBox/input.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport style from './input.module.css'\r\nimport send from './assets/send.png';\r\nimport mic from './assets/mic.png'\r\nfunction InputBox({ sendMessage }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  // const handleKeyPress = (event) => {\r\n  //   if (event.key === 'Enter') {\r\n  //     sendMessage(inputValue);\r\n  //     setInputValue('');\r\n  //   }\r\n  // }\r\n  \r\n  const handleSend = () => {\r\n    if (inputValue) {\r\n      const newMessage = {\r\n        type: 'sent',\r\n        text: inputValue,\r\n      };\r\n      setMessages([...messages, newMessage]);\r\n      setInputValue('');\r\n      setTimeout(() => {\r\n        const botResponse = {\r\n          type: 'received',\r\n          text: 'This is a bot response',\r\n        };\r\n        setMessages([...messages, botResponse]);\r\n      }, 1000); // simulate bot response delay\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={style.inputBox}>\r\n       <div className={style.messages}>\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={style.message + ' ' + style[message.type]}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={style.input}></div>\r\n      <i className=\"fas fa-grin\"></i>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        // onKeyPress={handleKeyPress}\r\n      />\r\n      <img src={mic} alt=\"Microphone\" />\r\n      <img src={send} alt=\"Send\" onClick={handleSend} />\r\n      {/* <i className=\"fas fa-microphone\"></i> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}