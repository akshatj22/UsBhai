{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\src\\\\chatUI\\\\inputBox\\\\input.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport style from './input.module.css';\nimport send from './assets/send.png';\nimport mic from './assets/mic.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputBox(_ref) {\n  _s();\n  let {\n    sendMessage\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [listening, setListening] = useState(false);\n  const [recorder, setRecorder] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const audioRef = useRef();\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  // const handleSend = () => {\n  //   if (inputValue) {\n  //     const userMessage = {\n  //       type: 'sent',\n  //       text: inputValue,\n  //     };\n  //     const botResponse = {\n  //       type: 'received',\n  //       text: 'This is a bot response',\n  //     };\n  //     setMessages([...messages, userMessage, botResponse]);\n  //     setInputValue('');\n  //   }\n  // };\n\n  const handleSend = () => {\n    if (inputValue || audioRef.current) {\n      const userMessage = {\n        type: 'sent',\n        text: inputValue,\n        audio: audioRef.current\n      };\n      const botResponse = {\n        type: 'received',\n        text: 'This is a bot response'\n      };\n      setMessages([...messages, userMessage, botResponse]);\n      setInputValue('');\n      audioRef.current = null;\n    }\n  };\n  const handleMicDown = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const mediaRecorder = new MediaRecorder(stream);\n      setMediaRecorder(mediaRecorder);\n      mediaRecorder.start();\n      setRecording(true);\n    }).catch(err => {\n      console.log('Unable to access microphone: ', err);\n    });\n  };\n  const handleMicUp = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const handleAudioData = event => {\n    const chunks = [];\n    chunks.push(event.data);\n    const audioBlob = new Blob(chunks, {\n      type: 'audio/mp3'\n    });\n    audioRef.current = audioBlob;\n  };\n  if (mediaRecorder) {\n    mediaRecorder.ondataavailable = handleAudioData;\n    mediaRecorder.onstop = handleMicUp;\n  }\n\n  // const handleMicClick = () => {\n  //   const recognition = new window.webkitSpeechRecognition();\n  //   recognition.lang = 'en-US';\n  //   recognition.start();\n  //   recognition.onresult = (event) => {\n  //     const speechToText = event.results[0][0].transcript;\n  //     setInputValue(speechToText);\n  //   };\n  //   recognition.onerror = (event) => {\n  //     console.log('Speech recognition error occurred: ', event.error);\n  //   };\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.inputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.userMessages,\n        children: messages.filter(message => message.type === 'sent').map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.message} ${style.sent}`,\n          children: [message.text, message.audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: URL.createObjectURL(message.audio),\n              type: \"audio/wav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.botMessages,\n        children: messages.filter(message => message.type === 'received').map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.message} ${style.received}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-grin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mic,\n      alt: \"Microphone\"\n      // onClick={handleMicClick}\\\n      ,\n      onMouseDown: handleMicDown,\n      onMouseUp: handleMicUp,\n      onTouchStart: handleMicDown,\n      onTouchEnd: handleMicUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: send,\n      alt: \"Send\",\n      onClick: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(InputBox, \"Jr/zAFHLSkrMxG12rjnBOgvqZNk=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","useRef","style","send","mic","jsxDEV","_jsxDEV","InputBox","_ref","_s","sendMessage","inputValue","setInputValue","messages","setMessages","listening","setListening","recorder","setRecorder","mediaRecorder","setMediaRecorder","audioRef","handleInputChange","event","target","value","handleKeyPress","key","handleSend","current","userMessage","type","text","audio","botResponse","handleMicDown","navigator","mediaDevices","getUserMedia","then","stream","MediaRecorder","start","setRecording","catch","err","console","log","handleMicUp","stop","handleAudioData","chunks","push","data","audioBlob","Blob","ondataavailable","onstop","className","inputBox","children","userMessages","filter","message","map","index","sent","controls","src","URL","createObjectURL","fileName","_jsxFileName","lineNumber","columnNumber","botMessages","received","input","placeholder","onChange","onKeyPress","alt","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onClick","_c","$RefreshReg$"],"sources":["D:/bot/src/chatUI/inputBox/input.js"],"sourcesContent":["import React, { useState , useRef} from 'react';\r\nimport style from './input.module.css'\r\nimport send from './assets/send.png';\r\nimport mic from './assets/mic.png'\r\nfunction InputBox({ sendMessage }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [listening, setListening] = useState(false);\r\n  const [recorder, setRecorder] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n  const audioRef = useRef();\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // const handleSend = () => {\r\n  //   if (inputValue) {\r\n  //     const userMessage = {\r\n  //       type: 'sent',\r\n  //       text: inputValue,\r\n  //     };\r\n  //     const botResponse = {\r\n  //       type: 'received',\r\n  //       text: 'This is a bot response',\r\n  //     };\r\n  //     setMessages([...messages, userMessage, botResponse]);\r\n  //     setInputValue('');\r\n  //   }\r\n  // };\r\n\r\n  const handleSend = () => {\r\n    if (inputValue || audioRef.current) {\r\n      const userMessage = {\r\n        type: 'sent',\r\n        text: inputValue,\r\n        audio: audioRef.current,\r\n      };\r\n      const botResponse = {\r\n        type: 'received',\r\n        text: 'This is a bot response',\r\n      };\r\n      setMessages([...messages, userMessage, botResponse]);\r\n      setInputValue('');\r\n      audioRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleMicDown = () => {\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        setMediaRecorder(mediaRecorder);\r\n        mediaRecorder.start();\r\n        setRecording(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log('Unable to access microphone: ', err);\r\n      });\r\n  };\r\n  \r\n  const handleMicUp = () => {\r\n    mediaRecorder.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const handleAudioData = (event) => {\r\n    const chunks = [];\r\n    chunks.push(event.data);\r\n    const audioBlob = new Blob(chunks, { type: 'audio/mp3' });\r\n    audioRef.current = audioBlob;\r\n  };\r\n  \r\n  if (mediaRecorder) {\r\n    mediaRecorder.ondataavailable = handleAudioData;\r\n    mediaRecorder.onstop = handleMicUp;\r\n  }\r\n\r\n\r\n\r\n  // const handleMicClick = () => {\r\n  //   const recognition = new window.webkitSpeechRecognition();\r\n  //   recognition.lang = 'en-US';\r\n  //   recognition.start();\r\n  //   recognition.onresult = (event) => {\r\n  //     const speechToText = event.results[0][0].transcript;\r\n  //     setInputValue(speechToText);\r\n  //   };\r\n  //   recognition.onerror = (event) => {\r\n  //     console.log('Speech recognition error occurred: ', event.error);\r\n  //   };\r\n  // };\r\n\r\n\r\n  return (\r\n\r\n    <div className={style.inputBox}>\r\n    <div className={style.messages}>\r\n      {/* <div className={style.userMessages}>\r\n        {messages.filter((message) => message.type === 'sent').map((message, index) => (\r\n          <div key={index} className={style.message + ' ' + style[message.type]}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={style.botMessages}>\r\n        {messages.filter((message) => message.type === 'received').map((message, index) => (\r\n          <div key={index} className={style.message + ' ' + style[message.type]}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div> */}\r\n            <div className={style.userMessages}>\r\n          {messages\r\n            .filter((message) => message.type === 'sent')\r\n            .map((message, index) => (\r\n              <div key={index} className={`${style.message} ${style.sent}`}>\r\n                {message.text}\r\n                {message.audio && (\r\n                  <audio controls>\r\n                    <source src={URL.createObjectURL(message.audio)} type=\"audio/wav\" />\r\n                  </audio>\r\n                )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className={style.botMessages}>\r\n          {messages\r\n            .filter((message) => message.type === 'received')\r\n            .map((message, index) => (\r\n              <div key={index} className={`${style.message} ${style.received}`}>\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className={style.input}></div>\r\n      <i className=\"fas fa-grin\"></i>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <img src={mic} alt=\"Microphone\"\r\n        // onClick={handleMicClick}\\\r\n        onMouseDown={handleMicDown}\r\n        onMouseUp={handleMicUp}\r\n        onTouchStart={handleMicDown}\r\n        onTouchEnd={handleMicUp}\r\n\r\n      />\r\n      <img src={send} alt=\"Send\" onClick={handleSend} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}