{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\src\\\\chatUI\\\\inputBox\\\\input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport style from './input.module.css';\nimport send from './assets/send.png';\nimport mic from './assets/mic.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputBox(_ref) {\n  _s();\n  let {\n    sendMessage\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [listening, setListening] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  // const handleSend = () => {\n  //   if (inputValue) {\n  //     const userMessage = {\n  //       type: 'sent',\n  //       text: inputValue,\n  //     };\n  //     const botResponse = {\n  //       type: 'received',\n  //       text: 'This is a bot response',\n  //     };\n  //     setMessages([...messages, userMessage, botResponse]);\n  //     setInputValue('');\n  //   }\n  // };\n\n  const handleSend = () => {\n    if (inputValue || audioBlob) {\n      const userMessage = {\n        type: 'sent',\n        text: inputValue,\n        audio: audioBlob\n      };\n      const botResponse = {\n        type: 'received',\n        text: 'This is a bot response'\n      };\n      setMessages([...messages, userMessage, botResponse]);\n      setInputValue('');\n      setAudioBlob(null);\n    }\n  };\n\n  // const handleMicClick = () => {\n  //   const recognition = new window.webkitSpeechRecognition();\n  //   recognition.lang = 'en-US';\n  //   recognition.start();\n  //   recognition.onresult = (event) => {\n  //     const speechToText = event.results[0][0].transcript;\n  //     setInputValue(speechToText);\n  //   };\n  //   recognition.onerror = (event) => {\n  //     console.log('Speech recognition error occurred: ', event.error);\n  //   };\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.inputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.userMessages,\n        children: messages.filter(message => message.type === 'sent').map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.message} ${style.sent}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.botMessages,\n        children: messages.filter(message => message.type === 'received').map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.message} ${style.received}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-grin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mic,\n      alt: \"Microphone\",\n      onClick: handleMicClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: send,\n      alt: \"Send\",\n      onClick: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(InputBox, \"D2gnNx5BYsilXPzsz3HR3KP4cjI=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","style","send","mic","jsxDEV","_jsxDEV","InputBox","_ref","_s","sendMessage","inputValue","setInputValue","messages","setMessages","listening","setListening","recording","setRecording","audioBlob","setAudioBlob","handleInputChange","event","target","value","handleKeyPress","key","handleSend","userMessage","type","text","audio","botResponse","className","inputBox","children","userMessages","filter","message","map","index","sent","fileName","_jsxFileName","lineNumber","columnNumber","botMessages","received","input","placeholder","onChange","onKeyPress","src","alt","onClick","handleMicClick","_c","$RefreshReg$"],"sources":["D:/bot/src/chatUI/inputBox/input.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport style from './input.module.css'\r\nimport send from './assets/send.png';\r\nimport mic from './assets/mic.png'\r\nfunction InputBox({ sendMessage }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [listening, setListening] = useState(false);\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // const handleSend = () => {\r\n  //   if (inputValue) {\r\n  //     const userMessage = {\r\n  //       type: 'sent',\r\n  //       text: inputValue,\r\n  //     };\r\n  //     const botResponse = {\r\n  //       type: 'received',\r\n  //       text: 'This is a bot response',\r\n  //     };\r\n  //     setMessages([...messages, userMessage, botResponse]);\r\n  //     setInputValue('');\r\n  //   }\r\n  // };\r\n  \r\n\r\n  const handleSend = () => {\r\n    if (inputValue || audioBlob) {\r\n      const userMessage = {\r\n        type: 'sent',\r\n        text: inputValue,\r\n        audio: audioBlob,\r\n      };\r\n      const botResponse = {\r\n        type: 'received',\r\n        text: 'This is a bot response',\r\n      };\r\n      setMessages([...messages, userMessage, botResponse]);\r\n      setInputValue('');\r\n      setAudioBlob(null);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  // const handleMicClick = () => {\r\n  //   const recognition = new window.webkitSpeechRecognition();\r\n  //   recognition.lang = 'en-US';\r\n  //   recognition.start();\r\n  //   recognition.onresult = (event) => {\r\n  //     const speechToText = event.results[0][0].transcript;\r\n  //     setInputValue(speechToText);\r\n  //   };\r\n  //   recognition.onerror = (event) => {\r\n  //     console.log('Speech recognition error occurred: ', event.error);\r\n  //   };\r\n  // };\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <div className={style.inputBox}>\r\n    <div className={style.messages}>\r\n      {/* <div className={style.userMessages}>\r\n        {messages.filter((message) => message.type === 'sent').map((message, index) => (\r\n          <div key={index} className={style.message + ' ' + style[message.type]}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={style.botMessages}>\r\n        {messages.filter((message) => message.type === 'received').map((message, index) => (\r\n          <div key={index} className={style.message + ' ' + style[message.type]}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n      <div className={style.userMessages}>\r\n  {messages.filter((message) => message.type === 'sent').map((message, index) => (\r\n    <div key={index} className={`${style.message} ${style.sent}`}>\r\n      {message.text}\r\n    </div>\r\n  ))}\r\n</div>\r\n<div className={style.botMessages}>\r\n  {messages.filter((message) => message.type === 'received').map((message, index) => (\r\n    <div key={index} className={`${style.message} ${style.received}`}>\r\n      {message.text}\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n    </div>\r\n      <div className={style.input}></div>\r\n      <i className=\"fas fa-grin\"></i>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <img src={mic} alt=\"Microphone\"\r\n        onClick={handleMicClick}\r\n\r\n      />\r\n      <img src={send} alt=\"Send\" onClick={handleSend} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}