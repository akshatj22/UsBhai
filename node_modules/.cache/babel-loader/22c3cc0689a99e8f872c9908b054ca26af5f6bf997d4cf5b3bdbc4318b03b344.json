{"ast":null,"code":"var _jsxFileName = \"D:\\\\bot\\\\src\\\\chatUI\\\\inputBox\\\\input.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport style from './input.module.css';\nimport send from './assets/send.png';\nimport mic from './assets/mic.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputBox(_ref) {\n  _s();\n  let {\n    sendMessage\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [listening, setListening] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const audioRef = useRef();\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n  const handleSend = () => {\n    if (inputValue) {\n      const userMessage = {\n        type: 'sent',\n        text: inputValue\n      };\n      const botResponse = {\n        type: 'received',\n        text: 'This is a bot response'\n      };\n      setMessages([...messages, userMessage, botResponse]);\n      setInputValue('');\n    }\n  };\n  const handleMicClick = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = event => {\n      const speechToText = event.results[0][0].transcript;\n      setInputValue(speechToText);\n    };\n    recognition.onerror = event => {\n      console.log('Speech recognition error occurred: ', event.error);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.inputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-grin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mic,\n      alt: \"Microphone\",\n      onClick: handleMicClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: send,\n      alt: \"Send\",\n      onClick: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(InputBox, \"g0q+GUFtPVbbHDxpqRKwsLsC2W0=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","useRef","style","send","mic","jsxDEV","_jsxDEV","InputBox","_ref","_s","sendMessage","inputValue","setInputValue","messages","setMessages","listening","setListening","recording","setRecording","audioRef","handleInputChange","event","target","value","handleKeyPress","key","handleSend","userMessage","type","text","botResponse","handleMicClick","recognition","window","webkitSpeechRecognition","lang","start","onresult","speechToText","results","transcript","onerror","console","log","error","className","inputBox","children","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","onChange","onKeyPress","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/bot/src/chatUI/inputBox/input.js"],"sourcesContent":["import React, { useState , useRef} from 'react';\r\nimport style from './input.module.css'\r\nimport send from './assets/send.png';\r\nimport mic from './assets/mic.png'\r\nfunction InputBox({ sendMessage }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [listening, setListening] = useState(false);\r\n  const [recording, setRecording] = useState(false);\r\n\r\n  const audioRef = useRef();\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleSend = () => {\r\n    if (inputValue) {\r\n      const userMessage = {\r\n        type: 'sent',\r\n        text: inputValue,\r\n      };\r\n      const botResponse = {\r\n        type: 'received',\r\n        text: 'This is a bot response',\r\n      };\r\n      setMessages([...messages, userMessage, botResponse]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleMicClick = () => {\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.start();\r\n    recognition.onresult = (event) => {\r\n      const speechToText = event.results[0][0].transcript;\r\n      setInputValue(speechToText);\r\n    };\r\n    recognition.onerror = (event) => {\r\n      console.log('Speech recognition error occurred: ', event.error);\r\n    };\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div className={style.inputBox}>\r\n    <div className={style.messages}>\r\n      {/* <div className={style.userMessages}>\r\n        {messages.filter((message) => message.type === 'sent').map((message, index) => (\r\n          <div key={index} className={style.message + ' ' + style[message.type]}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={style.botMessages}>\r\n        {messages.filter((message) => message.type === 'received').map((message, index) => (\r\n          <div key={index} className={style.message + ' ' + style[message.type]}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n      <div className={style.input}></div>\r\n      <i className=\"fas fa-grin\"></i>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <img src={mic} alt=\"Microphone\"\r\n        onClick={handleMicClick}\r\n\r\n      />\r\n      <img src={send} alt=\"Send\" onClick={handleSend} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}